
name: Tinybird - CD Workflow

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  contents: read
  pull-requests: write

concurrency: ${{ github.workflow }}-${{ github.event.ref }}

env:
  TINYBIRD_HOST: ${{ secrets.TINYBIRD_HOST }}
  TINYBIRD_TOKEN: ${{ secrets.TINYBIRD_TOKEN }}

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: staging
      
      - name: Fetch full git history
        run: |
          git fetch origin main
          git fetch origin staging
      
      - name: Show diff between staging and main
        run: |
          echo "üîç Commits in staging not in main:"
          git log origin/main..origin/staging --oneline
          
      - name: Install Tinybird CLI
        run: |
          curl https://tinybird.co | sh
          
      - name: Deploy to Tinybird Staging
        run: |
          cd tinybird
          tb --cloud --host ${{ env.TINYBIRD_HOST }} --token ${{ env.TINYBIRD_TOKEN }} deployment create
          
      - name: Create PR from staging to main
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git fetch origin main
          if git rev-list origin/main..origin/staging --count | grep -q '^0$'; then
            echo "üö´ No new commits to promote."
            exit 0
          fi

          existing_pr=$(gh pr list --base main --head staging --state open --json number --jq '.[0].number')

          if [ -z "$existing_pr" ]; then
            echo "üîß No PR found. Creating..."
            gh pr create \
              --base main \
              --head staging \
              --title "Deploy staging to main" \
              --body "This PR promotes the latest changes to production."
          else
            echo "‚úÖ PR already exists: https://github.com/${{ github.repository }}/pull/$existing_pr"
          fi

  deploy-production:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
          
      - name: Install Tinybird CLI
        run: |
          curl https://tinybird.co | sh
          
      - name: Deploy to Tinybird Production
        run: |
          cd tinybird

          # Get the list of deployments and look for any with status "Staging"
          STAGING_DEPLOYMENT=$(tb --cloud --cloud --host ${{ env.TINYBIRD_HOST }} --token ${{ env.TINYBIRD_TOKEN }} deployment ls | grep -i "Staging" || true)

          if [ -z "$STAGING_DEPLOYMENT" ]; then
            echo "‚úÖ No staging deployment to promote."
          else
            echo "üöÄ Staging deployment found. Promoting to production..."
            tb --cloud --host "${{ env.TINYBIRD_HOST }}" --token "${{ env.TINYBIRD_TOKEN }}" deployment promote
          fi
          