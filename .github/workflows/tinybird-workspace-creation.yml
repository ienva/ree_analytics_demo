name: Tinybird Workspace Creation and Data Migration

on:
  workflow_dispatch:
    inputs:
      source_workspace:
        description: 'Source workspace name (to copy data from)'
        required: true
        type: string
      target_workspace:
        description: 'Target workspace name (to create and copy data to)'
        required: true
        type: string
      copy_data:
        description: 'Copy last partition data from source to target'
        required: false
        type: boolean
        default: true

env:
  TINYBIRD_HOST: ${{ secrets.TINYBIRD_HOST }}
  TINYBIRD_TOKEN: ${{ secrets.TINYBIRD_TOKEN }}

jobs:
  create-workspace-and-migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Tinybird CLI
        run: |
          curl https://tinybird.co | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Validate inputs
        run: |
          echo "🔍 Validating workflow inputs..."
          echo "Source workspace: ${{ github.event.inputs.source_workspace }}"
          echo "Target workspace: ${{ github.event.inputs.target_workspace }}"
          echo "Copy data: ${{ github.event.inputs.copy_data }}"
          
          if [ "${{ github.event.inputs.source_workspace }}" = "${{ github.event.inputs.target_workspace }}" ]; then
            echo "❌ Source and target workspaces cannot be the same"
            exit 1
          fi

      - name: Create new Tinybird environment
        run: |
          echo "🚀 Creating new Tinybird workspace: ${{ github.event.inputs.target_workspace }}"
          
          # Build the command with optional --last-partition flag
          CMD="tb --cloud --host \"${{ env.TINYBIRD_HOST }}\" --token \"${{ env.TINYBIRD_TOKEN }}\" environment create \"${{ github.event.inputs.target_workspace }}\" --wait"
          
          if [ "${{ github.event.inputs.copy_data }}" = "true" ]; then
            CMD="$CMD --last-partition"
            echo "📋 Including last partition data in environment creation"
          fi
          
          # Execute the command
          eval $CMD
          
          echo "Environment created successfully ✅"

      - name: Check if environment exists
        run: |
          echo "🔎 Checking if environment exists: "${{ github.event.inputs.target_workspace }}" 
          LIST=$(tb --cloud \
            --host "${{ env.TINYBIRD_HOST }}" \
            --token "${{ env.TINYBIRD_TOKEN }}" \
            environment ls || true)
          # Extract all environment names from key:value lines
          MATCH=$(printf "%s" "$LIST" | sed -n 's/^name:[[:space:]]*//p' | grep -Fx "${{ github.event.inputs.target_workspace }}" || true)
          if [ -n "$MATCH" ]; then
            echo "✅ Environment found: ${{ github.event.inputs.target_workspace }}"
            echo "ENV_EXISTS=true" >> $GITHUB_ENV
          else
            echo "⚠️ Environment not found: ${{ github.event.inputs.target_workspace }}"
            echo "ENV_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Update resources in the environment
        if: env.ENV_EXISTS == 'true'
        run: |
          cd tinybird
          echo "🔨 Building environment: ${{ env.TARGET_ENV }}"
          tb --cloud \
            --host "${{ env.TINYBIRD_HOST }}" \
            --token "${{ env.TINYBIRD_TOKEN }}" \
            --environment="${{ env.TARGET_ENV }}" build
          
          echo "✅ Environment build completed successfully"
